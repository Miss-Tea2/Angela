import{a as j}from"./chunk-GOGAR7GA.js";import{a as o}from"./chunk-3Q6KTRXB.js";import{Kb as e,L as t,Qa as i,Ra as r,Ub as f,ka as d,va as g}from"./chunk-CSAMJVRY.js";import{a as l,b as c,g as y}from"./chunk-ODN5LVDJ.js";var v=y(f());var b={category:j,title:"\u96C6\u6210 Google Analytics",mdFile:"./index.md",keyword:"recipes/integrate-with-google-analytics"},a=b;var h=[];var w={},m=w;var x=`<h1 id="\u96C6\u6210-google-analytics" class="ngde">\u96C6\u6210 Google Analytics<a title="Link to heading" class="ng-doc-header-link ngde" href="/recipes/integrate-with-google-analytics#\u96C6\u6210-google-analytics"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">\u5728 <a href="/fundamentals/extension-html" class="ngde">extension.html</a> \u4E2D\u6DFB\u52A0 Google Analytics \u76F8\u5173\u7684 <code class="ngde">&#x3C;script></code> \u5373\u53EF\u4E3A Angela \u542F\u7528 Google Analytics\u3002</p><p class="ngde">\u6B64\u5916\uFF0C\u901A\u8FC7 <a href="/fundamentals/access-points" class="ngde">Angela Access Points</a> \uFF0CGoogle Analytics \u53EF\u4EE5\u6536\u96C6\u7EC6\u7C92\u5EA6\u66F4\u9AD8\u7684\u7528\u6237\u884C\u4E3A\u6570\u636E</p><p class="ngde">\u4EE5\u4E0B\u662F\u4E00\u4E2A\u793A\u4F8B\u5B9E\u73B0\uFF0C\u5C06\u5168\u90E8\u4EE3\u7801\u590D\u5236\u5230 <code class="ngde">extension.html</code> \u5373\u53EF\u542F\u7528\u8FDB\u9636 Google Analytics \u96C6\u6210\uFF1A</p><pre class="ngde hljs"><code class="hljs language-html code-lines ngde" lang="html" name="" icon="" highlightedlines="[]"><span class="line ngde"><span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">script</span> <span class="hljs-attr ngde">type</span>=<span class="hljs-string ngde">"module"</span>></span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-comment ngde">/** <span class="hljs-doctag ngde">@import</span> {<span class="hljs-type ngde"> Observable </span>} from "rxjs" */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-comment ngde">/** <span class="hljs-doctag ngde">@import</span> {<span class="hljs-type ngde"> User </span>} from "../../../../../angela/src/app/core/user/user.model" */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-comment ngde">/** <span class="hljs-doctag ngde">@import</span> {<span class="hljs-type ngde"> Plan </span>} from "../../../../../angela/src/app/core/plan/plan.model" */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-comment ngde">/**</span>
</span><span class="line ngde"><span class="hljs-comment ngde"> * </span><span class="hljs-doctag ngde">@typedef</span> <span class="hljs-variable ngde">AngelaAccessPoints</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde"> * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">() => Observable</span>} <span class="hljs-variable ngde">watchCommands</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde"> * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">(command) => object</span>} <span class="hljs-variable ngde">readCommandMetadata</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde"> * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">() => Observable</span>} <span class="hljs-variable ngde">watchEvents</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde"> * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">(event) => object</span>} <span class="hljs-variable ngde">readEventMetadata</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde"> * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">() => Observable&#x3C;string></span>} <span class="hljs-variable ngde">queryAuthToken</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde"> * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">() => Observable&#x3C;User></span>} <span class="hljs-variable ngde">queryUser</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde"> * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">() => Observable&#x3C;Plan | null></span>} <span class="hljs-variable ngde">queryUserPlan</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde"> */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-comment ngde">/**</span>
</span><span class="line ngde"><span class="hljs-comment ngde"> * </span><span class="hljs-doctag ngde">@typedef</span> {<span class="hljs-type ngde">((...args: unknown[]) => void) &#x26; { adapted?: boolean </span><span class="hljs-comment ngde">}} GtagSdk</span>
</span><span class="line ngde"><span class="hljs-comment ngde"> */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-comment ngde">/**</span>
</span><span class="line ngde"><span class="hljs-comment ngde"> * </span><span class="hljs-doctag ngde">@typedef</span> {<span class="hljs-type ngde">AngelaAccessPoints &#x26; { gtag?: GtagSdk; </span><span class="hljs-comment ngde">}} Global</span>
</span><span class="line ngde"><span class="hljs-comment ngde"> */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-keyword ngde">import</span> * <span class="hljs-keyword ngde">as</span> mRxJS <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">'https://cdn.skypack.dev/rxjs@7.8.1'</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-comment ngde">/**<span class="hljs-doctag ngde">@returns</span> {<span class="hljs-type ngde">asserts v is Global</span>} */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-keyword ngde">function</span> <span class="hljs-title function_ ngde">typeAssertGlobal</span>(<span class="hljs-params ngde">v</span><span class="javascript ngde">) {}</span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-comment ngde">/**<span class="hljs-doctag ngde">@returns</span> {<span class="hljs-type ngde">asserts m is typeof import("rxjs")</span>} */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-keyword ngde">function</span> <span class="hljs-title function_ ngde">typeAssertModuleRxJS</span>(<span class="hljs-params ngde">m</span><span class="javascript ngde">) {}</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-title function_ ngde">typeAssertGlobal</span>(<span class="hljs-variable language_ ngde">window</span><span class="javascript ngde">);</span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-keyword ngde">const</span> <span class="hljs-variable language_ ngde">global</span> = <span class="hljs-variable language_ ngde">window</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-keyword ngde">const</span> { watchCommands, watchEvents, readCommandMetadata } = <span class="hljs-variable language_ ngde">global</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-title function_ ngde">typeAssertModuleRxJS</span><span class="javascript ngde">(mRxJS);</span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-keyword ngde">const</span><span class="javascript ngde"> { timer, first, map, filter } = mRxJS;</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-title function_ ngde">timer</span>(<span class="hljs-number ngde">1000</span>, <span class="hljs-number ngde">1000</span><span class="javascript ngde">)</span>
</span><span class="line ngde"><span class="javascript ngde">  .</span><span class="hljs-title function_ ngde">pipe</span><span class="javascript ngde">(</span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-title function_ ngde">map</span>(<span class="hljs-function ngde">() =></span> <span class="hljs-variable language_ ngde">global</span>.<span class="hljs-property ngde">gtag</span><span class="javascript ngde">),</span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-title function_ ngde">first</span>(<span class="hljs-title class_ ngde">Boolean</span><span class="javascript ngde">),</span>
</span><span class="line ngde"><span class="javascript ngde">  )</span>
</span><span class="line ngde"><span class="javascript ngde">  .</span><span class="hljs-title function_ ngde">subscribe</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">gtag</span>) =></span><span class="javascript ngde"> {</span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-title function_ ngde">adaptGA</span><span class="javascript ngde">(gtag);</span>
</span><span class="line ngde"><span class="javascript ngde">    gtag.</span><span class="hljs-property ngde">adapted</span> = <span class="hljs-literal ngde">true</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">  });</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-comment ngde">/**</span>
</span><span class="line ngde"><span class="hljs-comment ngde"> *</span>
</span><span class="line ngde"><span class="hljs-comment ngde"> * </span><span class="hljs-doctag ngde">@param</span> {<span class="hljs-type ngde">GtagSdk</span>} <span class="hljs-variable ngde">gtag</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde"> */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-keyword ngde">function</span> <span class="hljs-title function_ ngde">adaptGA</span>(<span class="hljs-params ngde">gtag</span><span class="javascript ngde">) {</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">const</span> commands$ = <span class="hljs-title function_ ngde">watchCommands</span><span class="javascript ngde">();</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">const</span> events$ = <span class="hljs-title function_ ngde">watchEvents</span><span class="javascript ngde">();</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  commands$</span>
</span><span class="line ngde"><span class="javascript ngde">    .</span><span class="hljs-title function_ ngde">pipe</span><span class="javascript ngde">(</span>
</span><span class="line ngde"><span class="javascript ngde">      </span><span class="hljs-title function_ ngde">filter</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">command</span>) =></span><span class="javascript ngde"> {</span>
</span><span class="line ngde"><span class="javascript ngde">        </span><span class="hljs-keyword ngde">const</span> name = command.<span class="hljs-property ngde">constructor</span>.<span class="hljs-property ngde">name</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">        </span><span class="hljs-keyword ngde">const</span> metadata = <span class="hljs-title function_ ngde">readCommandMetadata</span><span class="javascript ngde">(command);</span>
</span><span class="line ngde"><span class="javascript ngde">        </span><span class="hljs-keyword ngde">const</span> isProcess = !!metadata.<span class="hljs-property ngde">process</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">        </span><span class="hljs-keyword ngde">return</span> isProcess || name === <span class="hljs-string ngde">'Logout'</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">      }),</span>
</span><span class="line ngde"><span class="javascript ngde">    )</span>
</span><span class="line ngde"><span class="javascript ngde">    .</span><span class="hljs-title function_ ngde">subscribe</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">command</span>) =></span><span class="javascript ngde"> {</span>
</span><span class="line ngde"><span class="javascript ngde">      </span><span class="hljs-title function_ ngde">gtag</span>(<span class="hljs-string ngde">'event'</span>, command.<span class="hljs-property ngde">constructor</span>.<span class="hljs-property ngde">name</span><span class="javascript ngde">, { ...command });</span>
</span><span class="line ngde"><span class="javascript ngde">    });</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  events$</span>
</span><span class="line ngde"><span class="javascript ngde">    .</span><span class="hljs-title function_ ngde">pipe</span><span class="javascript ngde">(</span>
</span><span class="line ngde"><span class="javascript ngde">      </span><span class="hljs-title function_ ngde">filter</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">event</span>) =></span><span class="javascript ngde"> {</span>
</span><span class="line ngde"><span class="javascript ngde">        </span><span class="hljs-keyword ngde">const</span> name = event.<span class="hljs-property ngde">constructor</span>.<span class="hljs-property ngde">name</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">        </span><span class="hljs-keyword ngde">return</span> name === <span class="hljs-string ngde">'ProcessFailed'</span> || name === <span class="hljs-string ngde">'QueryErrored'</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">      }),</span>
</span><span class="line ngde"><span class="javascript ngde">    )</span>
</span><span class="line ngde"><span class="javascript ngde">    .</span><span class="hljs-title function_ ngde">subscribe</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">event</span>) =></span><span class="javascript ngde"> {</span>
</span><span class="line ngde"><span class="javascript ngde">      </span><span class="hljs-title function_ ngde">gtag</span>(<span class="hljs-string ngde">'event'</span>, <span class="hljs-string ngde">'exception'</span><span class="javascript ngde">, {</span>
</span><span class="line ngde"><span class="javascript ngde">        </span><span class="hljs-attr ngde">description</span>: <span class="hljs-string ngde">\`[<span class="hljs-subst ngde">\${event.constructor.name}</span>] <span class="hljs-subst ngde">\${<span class="hljs-built_in ngde">String</span>(event.error)}</span>\`</span><span class="javascript ngde">,</span>
</span><span class="line ngde"><span class="javascript ngde">        </span><span class="hljs-attr ngde">stack</span>: event.<span class="hljs-property ngde">error</span> <span class="hljs-keyword ngde">instanceof</span> <span class="hljs-title class_ ngde">Error</span> ? event.<span class="hljs-property ngde">error</span>.<span class="hljs-property ngde">stack</span> : <span class="hljs-literal ngde">null</span><span class="javascript ngde">,</span>
</span><span class="line ngde"><span class="javascript ngde">        </span><span class="hljs-attr ngde">fatal</span>: <span class="hljs-literal ngde">false</span><span class="javascript ngde">,</span>
</span><span class="line ngde"><span class="javascript ngde">      });</span>
</span><span class="line ngde"><span class="javascript ngde">    });</span>
</span><span class="line ngde"><span class="javascript ngde">}</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">script</span>></span>
</span></code></pre>`,k=(()=>{let s=class s extends e{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent=x,this.page=a,this.demoAssets=m}};s.\u0275fac=function(p){return new(p||s)},s.\u0275cmp=t({type:s,selectors:[["ng-doc-page-recipes-integrate-with-google-analytics"]],standalone:!0,features:[i([{provide:e,useExisting:s},h,a.providers??[]]),d,r],decls:1,vars:0,template:function(p,A){p&1&&g(0,"ng-doc-page")},dependencies:[o],encapsulation:2,changeDetection:0});let n=s;return n})(),_=[c(l({},(0,v.isRoute)(a.route)?a.route:{}),{path:"",component:k,title:"\u96C6\u6210 Google Analytics"})],U=_;export{k as DynamicComponent,U as default};
