import{a as o}from"./chunk-GOGAR7GA.js";import{a as j}from"./chunk-CGZG3FDN.js";import{Bb as e,K as t,La as i,Lb as f,Ma as r,ga as d,qa as g}from"./chunk-SLJXJAH7.js";import{a as l,b as c,g as y}from"./chunk-ODN5LVDJ.js";var v=y(f());var _={category:o,title:"\u96C6\u6210 Crisp",mdFile:"./index.md",keyword:"recipes/integrate-with-crisp"},a=_;var h=[];var b={},m=b;var k=`<h1 id="\u96C6\u6210-crisp" class="ngde">\u96C6\u6210 Crisp<a title="Link to heading" class="ng-doc-header-link ngde" href="/recipes/integrate-with-crisp#\u96C6\u6210-crisp"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">\u5728 <a href="/fundamentals/extension-html" class="ngde">extension.html</a> \u4E2D\u6DFB\u52A0 Crisp \u76F8\u5173\u7684 <code class="ngde">&#x3C;script></code> \u5373\u53EF\u4E3A Angela \u542F\u7528 Crisp\u3002</p><p class="ngde">\u6B64\u5916\uFF0C\u901A\u8FC7 <a href="/fundamentals/access-points" class="ngde">Angela Access Points</a> \uFF0CCrisp \u4F1A\u8BDD\u53EF\u4EE5\u643A\u5E26\u66F4\u591A\u7684\u4E0A\u4E0B\u6587\u4FE1\u606F\u3002</p><p class="ngde">\u4EE5\u4E0B\u662F\u4E00\u4E2A\u793A\u4F8B\u5B9E\u73B0\uFF0C\u5C06\u5168\u90E8\u4EE3\u7801\u590D\u5236\u5230 <code class="ngde">extension.html</code> \u5373\u53EF\u542F\u7528\u8FDB\u9636 Crisp \u96C6\u6210\uFF1A</p><pre class="ngde hljs"><code class="hljs language-html code-lines ngde" lang="html" name="" icon="" highlightedlines="[]"><span class="line ngde"><span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">script</span> <span class="hljs-attr ngde">type</span>=<span class="hljs-string ngde">"module"</span>></span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/** <span class="hljs-doctag ngde">@import</span> {<span class="hljs-type ngde"> Observable </span>} from "rxjs" */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/** <span class="hljs-doctag ngde">@import</span> {<span class="hljs-type ngde"> User </span>} from "../src/app/core/user/user.model" */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/** <span class="hljs-doctag ngde">@import</span> {<span class="hljs-type ngde"> Plan </span>} from "../src/app/core/plan/plan.model" */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/**</span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@typedef</span> <span class="hljs-variable ngde">AngelaAccessPoints</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">() => Observable</span>} <span class="hljs-variable ngde">watchCommands</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">(command) => object</span>} <span class="hljs-variable ngde">readCommandMetadata</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">() => Observable</span>} <span class="hljs-variable ngde">watchEvents</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">(event) => object</span>} <span class="hljs-variable ngde">readEventMetadata</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">() => Observable&#x3C;string></span>} <span class="hljs-variable ngde">queryAuthToken</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">() => Observable&#x3C;User></span>} <span class="hljs-variable ngde">queryUser</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">() => Observable&#x3C;Plan | null></span>} <span class="hljs-variable ngde">queryUserPlan</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/**</span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@typedef</span> <span class="hljs-variable ngde">CrispSdk</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">(args: [string, string, [unknown]]) => void</span>} <span class="hljs-variable ngde">push</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@property</span> {<span class="hljs-type ngde">boolean</span><span class="hljs-comment ngde">} [adapted]</span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@see</span><span class="hljs-comment ngde"> https://docs.crisp.chat/guides/chatbox-sdks/web-sdk/dollar-crisp/</span>
</span><span class="line ngde"><span class="hljs-comment ngde">   */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/**</span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@typedef</span> {<span class="hljs-type ngde">AngelaAccessPoints &#x26; { $crisp?: CrispSdk </span><span class="hljs-comment ngde">}} Global</span>
</span><span class="line ngde"><span class="hljs-comment ngde">   */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">import</span> * <span class="hljs-keyword ngde">as</span> mRxJS <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">'https://cdn.skypack.dev/rxjs@7.8.1'</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">import</span> * <span class="hljs-keyword ngde">as</span> mFilesize <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">'https://cdn.skypack.dev/filesize@10.0.12'</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">import</span> * <span class="hljs-keyword ngde">as</span> mDayjs <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">'https://cdn.skypack.dev/dayjs@1.11.9'</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/**<span class="hljs-doctag ngde">@returns</span> {<span class="hljs-type ngde">asserts v is Global</span>} */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">function</span> <span class="hljs-title function_ ngde">typeAssertGlobal</span>(<span class="hljs-params ngde">v</span><span class="javascript ngde">) {}</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/**<span class="hljs-doctag ngde">@returns</span> {<span class="hljs-type ngde">asserts m is typeof import("rxjs")</span>} */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">function</span> <span class="hljs-title function_ ngde">typeAssertModuleRxJS</span>(<span class="hljs-params ngde">m</span><span class="javascript ngde">) {}</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/**<span class="hljs-doctag ngde">@returns</span> {<span class="hljs-type ngde">asserts m is typeof import("filesize")</span>} */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">function</span> <span class="hljs-title function_ ngde">typeAssertModuleFilesize</span>(<span class="hljs-params ngde">m</span><span class="javascript ngde">) {}</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/**<span class="hljs-doctag ngde">@returns</span> {<span class="hljs-type ngde">asserts m is typeof import('dayjs')</span>} */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">function</span> <span class="hljs-title function_ ngde">typeAssertModuleDayjs</span>(<span class="hljs-params ngde">m</span><span class="javascript ngde">) {}</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-title function_ ngde">typeAssertGlobal</span>(<span class="hljs-variable language_ ngde">window</span><span class="javascript ngde">);</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">const</span> <span class="hljs-variable language_ ngde">global</span> = <span class="hljs-variable language_ ngde">window</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">const</span> { queryAuthToken, queryUser, queryUserPlan } = <span class="hljs-variable language_ ngde">global</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-title function_ ngde">typeAssertModuleRxJS</span><span class="javascript ngde">(mRxJS);</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">const</span><span class="javascript ngde"> { switchMap, combineLatest, timer, first, map } = mRxJS;</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-title function_ ngde">typeAssertModuleDayjs</span><span class="javascript ngde">(mDayjs);</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">const</span><span class="javascript ngde"> dayjs = mDayjs;</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-title function_ ngde">typeAssertModuleFilesize</span><span class="javascript ngde">(mFilesize);</span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">const</span><span class="javascript ngde"> { filesize } = mFilesize;</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-title function_ ngde">timer</span>(<span class="hljs-number ngde">1000</span>, <span class="hljs-number ngde">1000</span><span class="javascript ngde">)</span>
</span><span class="line ngde"><span class="javascript ngde">    .</span><span class="hljs-title function_ ngde">pipe</span><span class="javascript ngde">(</span>
</span><span class="line ngde"><span class="javascript ngde">      </span><span class="hljs-title function_ ngde">map</span>(<span class="hljs-function ngde">() =></span> <span class="hljs-variable language_ ngde">global</span>.<span class="hljs-property ngde">$crisp</span><span class="javascript ngde">),</span>
</span><span class="line ngde"><span class="javascript ngde">      </span><span class="hljs-title function_ ngde">first</span>(<span class="hljs-title class_ ngde">Boolean</span><span class="javascript ngde">),</span>
</span><span class="line ngde"><span class="javascript ngde">    )</span>
</span><span class="line ngde"><span class="javascript ngde">    .</span><span class="hljs-title function_ ngde">subscribe</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">crisp</span>) =></span><span class="javascript ngde"> {</span>
</span><span class="line ngde"><span class="javascript ngde">      </span><span class="hljs-title function_ ngde">adaptCrisp</span><span class="javascript ngde">(crisp);</span>
</span><span class="line ngde"><span class="javascript ngde">      crisp.</span><span class="hljs-property ngde">adapted</span> = <span class="hljs-literal ngde">true</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">    });</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/**</span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@param</span> {<span class="hljs-type ngde">CrispSdk</span>} <span class="hljs-variable ngde">crisp</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">function</span> <span class="hljs-title function_ ngde">adaptCrisp</span>(<span class="hljs-params ngde">crisp</span><span class="javascript ngde">) {</span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-title function_ ngde">queryAuthToken</span><span class="javascript ngde">()</span>
</span><span class="line ngde"><span class="javascript ngde">      .</span><span class="hljs-title function_ ngde">pipe</span><span class="javascript ngde">(</span>
</span><span class="line ngde"><span class="javascript ngde">        </span><span class="hljs-title function_ ngde">switchMap</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">token</span>) =></span><span class="javascript ngde"> {</span>
</span><span class="line ngde"><span class="javascript ngde">          </span><span class="hljs-keyword ngde">if</span> (!token) <span class="hljs-keyword ngde">return</span><span class="javascript ngde"> [];</span>
</span><span class="line ngde"><span class="javascript ngde">          </span><span class="hljs-keyword ngde">const</span> user$ = <span class="hljs-title function_ ngde">queryUser</span><span class="javascript ngde">();</span>
</span><span class="line ngde"><span class="javascript ngde">          </span><span class="hljs-keyword ngde">const</span> userPlan$ = <span class="hljs-title function_ ngde">queryUserPlan</span><span class="javascript ngde">();</span>
</span><span class="line ngde"><span class="javascript ngde">          </span><span class="hljs-keyword ngde">return</span> <span class="hljs-title function_ ngde">combineLatest</span><span class="javascript ngde">([user$, userPlan$]);</span>
</span><span class="line ngde"><span class="javascript ngde">        }),</span>
</span><span class="line ngde"><span class="javascript ngde">      )</span>
</span><span class="line ngde"><span class="javascript ngde">      .</span><span class="hljs-title function_ ngde">subscribe</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">[user, plan]</span>) =></span><span class="javascript ngde"> {</span>
</span><span class="line ngde"><span class="javascript ngde">        </span><span class="hljs-title function_ ngde">provideCrispData</span><span class="javascript ngde">(crisp, user, plan);</span>
</span><span class="line ngde"><span class="javascript ngde">      });</span>
</span><span class="line ngde"><span class="javascript ngde">  }</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-comment ngde">/**</span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@param</span> {<span class="hljs-type ngde">CrispSdk</span>} <span class="hljs-variable ngde">crisp</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@param</span> {<span class="hljs-type ngde">User</span>} <span class="hljs-variable ngde">user</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * </span><span class="hljs-doctag ngde">@param</span> {<span class="hljs-type ngde">?Plan</span>} <span class="hljs-variable ngde">plan</span><span class="hljs-comment ngde"></span>
</span><span class="line ngde"><span class="hljs-comment ngde">   */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">  </span><span class="hljs-keyword ngde">function</span> <span class="hljs-title function_ ngde">provideCrispData</span>(<span class="hljs-params ngde">crisp, user, plan</span><span class="javascript ngde">) {</span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-keyword ngde">const</span> <span class="hljs-title function_ ngde">formatFilesize</span> = (<span class="hljs-params ngde"><span class="hljs-comment ngde">/**<span class="hljs-doctag ngde">@type</span> {<span class="hljs-type ngde">number</span>} */</span> size</span><span class="javascript ngde">) =></span>
</span><span class="line ngde"><span class="javascript ngde">      </span><span class="hljs-title function_ ngde">filesize</span>(size, { <span class="hljs-attr ngde">base</span>: <span class="hljs-number ngde">2</span>, <span class="hljs-attr ngde">standard</span>: <span class="hljs-string ngde">'jedec'</span>, <span class="hljs-attr ngde">spacer</span>: <span class="hljs-string ngde">''</span><span class="javascript ngde"> });</span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-keyword ngde">const</span> <span class="hljs-title function_ ngde">formatDate</span> = (<span class="hljs-params ngde"><span class="hljs-comment ngde">/**<span class="hljs-doctag ngde">@type</span> {<span class="hljs-type ngde">Date</span>} */</span> date</span><span class="javascript ngde">) =></span>
</span><span class="line ngde"><span class="javascript ngde">      </span><span class="hljs-title function_ ngde">dayjs</span>(date).<span class="hljs-title function_ ngde">format</span>(<span class="hljs-string ngde">'YYYY-MM-DD'</span><span class="javascript ngde">);</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-keyword ngde">const</span> planExpiry = user.<span class="hljs-property ngde">planExpireAt</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-keyword ngde">const</span> trafficTotal = user.<span class="hljs-property ngde">trafficTotal</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-keyword ngde">const</span> trafficUsed = user.<span class="hljs-property ngde">trafficUploaded</span> + user.<span class="hljs-property ngde">trafficDownloaded</span><span class="javascript ngde">;</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">    crisp.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'set'</span>, <span class="hljs-string ngde">'user:email'</span>, [user.<span class="hljs-property ngde">email</span><span class="javascript ngde">]]);</span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-keyword ngde">if</span> (user.<span class="hljs-property ngde">avatarUrl</span>) crisp.<span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'set'</span>, <span class="hljs-string ngde">'user:avatar'</span>, [user.<span class="hljs-property ngde">avatarUrl</span><span class="javascript ngde">]]);</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-comment ngde">/**<span class="hljs-doctag ngde">@type</span> {<span class="hljs-type ngde">[string, string][]</span>} */</span><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">    </span><span class="hljs-keyword ngde">const</span><span class="javascript ngde"> data = [];</span>
</span><span class="line ngde"><span class="javascript ngde">    data.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'UUID'</span>, user.<span class="hljs-property ngde">id</span><span class="javascript ngde">]);</span>
</span><span class="line ngde"><span class="javascript ngde">    data.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'Plan'</span>, plan?.<span class="hljs-property ngde">name</span> || <span class="hljs-string ngde">'N/A'</span><span class="javascript ngde">]);</span>
</span><span class="line ngde"><span class="javascript ngde">    data.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'ExpireTime'</span>, planExpiry ? <span class="hljs-title function_ ngde">formatDate</span>(planExpiry) : <span class="hljs-string ngde">'N/A'</span><span class="javascript ngde">]);</span>
</span><span class="line ngde"><span class="javascript ngde">    data.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'Traffic'</span>, <span class="hljs-title function_ ngde">formatFilesize</span><span class="javascript ngde">(trafficTotal)]);</span>
</span><span class="line ngde"><span class="javascript ngde">    data.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'TrafficUsed'</span>, <span class="hljs-title function_ ngde">formatFilesize</span><span class="javascript ngde">(trafficUsed)]);</span>
</span><span class="line ngde"><span class="javascript ngde">    data.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'Balance'</span>, user.<span class="hljs-property ngde">balance</span>.<span class="hljs-title function_ ngde">toString</span><span class="javascript ngde">()]);</span>
</span><span class="line ngde"><span class="javascript ngde">    data.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'Commission'</span>, user.<span class="hljs-property ngde">commission</span>.<span class="hljs-title function_ ngde">toString</span><span class="javascript ngde">()]);</span>
</span><span class="line ngde"><span class="javascript ngde">    data.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'CommissionPending'</span>, user.<span class="hljs-property ngde">commissionInProgress</span>.<span class="hljs-title function_ ngde">toString</span><span class="javascript ngde">()]);</span>
</span><span class="line ngde"><span class="javascript ngde">    data.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'CommissionTotal'</span>, user.<span class="hljs-property ngde">commissionTotal</span>.<span class="hljs-title function_ ngde">toString</span><span class="javascript ngde">()]);</span>
</span><span class="line ngde"><span class="javascript ngde">    data.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'RegistrationTime'</span>, <span class="hljs-title function_ ngde">formatDate</span>(user.<span class="hljs-property ngde">createdAt</span><span class="javascript ngde">)]);</span>
</span><span class="line ngde"><span class="javascript ngde"></span>
</span><span class="line ngde"><span class="javascript ngde">    crisp.</span><span class="hljs-title function_ ngde">push</span>([<span class="hljs-string ngde">'set'</span>, <span class="hljs-string ngde">'session:data'</span><span class="javascript ngde">, [data]]);</span>
</span><span class="line ngde"><span class="javascript ngde">  }</span>
</span><span class="line ngde"><span class="javascript ngde"></span><span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">script</span>></span>
</span></code></pre>`,w=(()=>{let s=class s extends e{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent=k,this.page=a,this.demoAssets=m}};s.\u0275fac=function(p){return new(p||s)},s.\u0275cmp=t({type:s,selectors:[["ng-doc-page-recipes-integrate-with-crisp"]],standalone:!0,features:[i([{provide:e,useExisting:s},h,a.providers??[]]),d,r],decls:1,vars:0,template:function(p,C){p&1&&g(0,"ng-doc-page")},dependencies:[j],encapsulation:2,changeDetection:0});let n=s;return n})(),x=[c(l({},(0,v.isRoute)(a.route)?a.route:{}),{path:"",component:w,title:"\u96C6\u6210 Crisp"})],E=x;export{w as DynamicComponent,E as default};
